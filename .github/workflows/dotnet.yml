# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
  publish:
     needs: build
     runs-on: self-hosted
     steps:
       - name: Publish
         run: dotnet publish -c Release -r win-x64 --self-contained true -o ./publish
       - name: Deploy to IIS
         run: |
          if ((Get-WebSiteState -Name LoginService).Value -eq "Started")
          {
              Stop-WebSite -Name LoginService
              echo "Stopped Website LoginService"
          }
          if ((Get-WebAppPoolState -Name LoginService).Value -eq "Started")
          {
              Stop-WebAppPool -Name LoginService
              echo "Stopped Application Pool LoginService"
          }
          
          Start-Sleep -s 15        
          Copy-Item .\publish\* C:\Deployment\LoginService -Recurse -Force
          
          if ((Get-WebSiteState -Name LoginService).Value -eq "Stopped")
          {
              Start-WebSite -Name LoginService
              echo "Started Website LoginService"
          }
          if ((Get-WebAppPoolState -Name LoginService).Value -eq "Stopped")
          {
              Start-WebAppPool -Name LoginService
              echo "Started Application Pool LoginService"
          }
          
            if ($lastexitcode -lt 8) { $global:lastexitcode = 0 }
